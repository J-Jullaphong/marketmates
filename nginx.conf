events {}

http {
    include /etc/nginx/mime.types;
    server_tokens off;

    limit_req_zone $binary_remote_addr zone=rate_limit:10m rate=10r/s;

    geo $block_ip {
        default 0;
        192.168.1.100 1;
        203.0.113.55 1;
    }

    map $block_ip $deny_request {
        1 "403";
        0 "";
    }

    upstream django {
        server framework:8000;
    }

    upstream daphne {
        server framework:8001;
    }

    map $http_upgrade $connection_upgrade {
        default upgrade;
        ''      close;
    }

    server {
        listen 80;
        server_name localhost;

        location / {
            return 301 https://$host$request_uri;
        }
    }

    server {
        listen 443 ssl;
        server_name localhost;

        ssl_certificate /etc/nginx/certs/nginx-selfsigned.crt;
        ssl_certificate_key /etc/nginx/certs/nginx-selfsigned.key;
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers HIGH:!aNULL:!MD5;

        add_header X-Frame-Options DENY;
        add_header X-XSS-Protection "1; mode=block";
        add_header X-Content-Type-Options nosniff;
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;

        location / {
            limit_req zone=rate_limit burst=20 nodelay;
            proxy_pass http://django;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            if ($request_method !~ ^(GET|POST|HEAD|OPTIONS)$) {
                return 405;
            }

            if ($deny_request = "403") {
                return 403;
            }
        }

        location /ws/ {
            limit_req zone=rate_limit burst=10 nodelay;
            proxy_pass http://daphne;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection $connection_upgrade;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            if ($deny_request = "403") {
                return 403;
            }
        }

        client_max_body_size 10M;

        location /static/ {
            alias /static/;
            autoindex off;
            expires max;
        }

        location /media/ {
            alias /media/;
            autoindex off;
            expires max;
        }
    }
}
